name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  macos:
    name: macOS 11 Xcode
    runs-on: macos-11.0
    strategy:
      fail-fast: false
      matrix:
        xcode: ['12.5.1', '13.0']
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
    steps:
      - uses: actions/checkout@v2
      - name: Ruby
        run: |
          gem install rouge
          ruby --version
          ruby -e 'puts RbConfig::TOPDIR'
          ruby -e 'puts RbConfig::CONFIG'
          gem env
      - name: CRuby
        run: |
          swift package update 
          swift package edit CRuby
          Packages/CRuby/cfg-cruby --mode custom --path /usr/local/opt/ruby@2.7
          cat Packages/CRuby/CRuby.pc
          cat Packages/CRuby/Sources/CRuby/module.modulemap
          cat Packages/CRuby/Sources/CRuby/ruby_headers.h
      - name: Tests
        run: |
          export PKG_CONFIG_PATH=$(pwd)/Packages/CRuby:$PKG_CONFIG_PATH
          swift test --enable-code-coverage
      - name: Coverage
        if: matrix.xcode == '12.5.1'
        run: |
          xcrun llvm-cov export -format lcov .build/debug/RubyGatewayPackageTests.xctest/Contents/MacOS/RubyGatewayPackageTests -instr-profile .build/debug/codecov/default.profdata -ignore-filename-regex "(Test|checkouts)" > coverage.lcov
          bash <(curl -s https://codecov.io/bash) -f coverage.lcov

  linux:
    name: ubuntu latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rby:
          - short: '2.6'
            full: '2.6.8'
          - short: '2.7'
            full: '2.7.4'
          - short: '3.0'
            full: '3.0.2'
            extra_args: '-Xcc -fdeclspec'
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.rby.short }}
      - name: Ruby
        run: |
          gem install rouge
          ruby --version
          which ruby
          ruby -e 'puts RbConfig::TOPDIR'
          ruby -e 'puts RbConfig::CONFIG'
          gem env
          ls -l /opt/hostedtoolcache/Ruby
          ls -l /opt/hostedtoolcache/Ruby/${{ matrix.rby.full }}
          ls -l /opt/hostedtoolcache/Ruby/${{ matrix.rby.full }}/x64
          ls -l /opt/hostedtoolcache/Ruby/${{ matrix.rby.full }}/x64/lib
      - name: CRuby
        run: |
          swift package update 
          swift package edit CRuby
          Packages/CRuby/cfg-cruby --mode custom --path /opt/hostedtoolcache/Ruby/${{ matrix.rby.full }}/x64
          cat Packages/CRuby/CRuby.pc
          cat Packages/CRuby/Sources/CRuby/module.modulemap
          cat Packages/CRuby/Sources/CRuby/ruby_headers.h
      - name: Tests
        run: |
          export PKG_CONFIG_PATH=$(pwd)/Packages/CRuby:$PKG_CONFIG_PATH
          export LD_LIBRARY_PATH=/opt/hostedtoolcache/Ruby/${{ matrix.rby.full }}/x64/lib:$LD_LIBRARY_PATH
          swift test ${{ matrix.rby.extra_args }}
